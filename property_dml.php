<?php

// Data functions (insert, update, delete, form) for table property

// This script and data application were generated by AppGini 5.62
// Download AppGini for free from https://bigprof.com/appgini/download/

function property_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('property');
	if(!$arrPerm[1]){
		return false;
	}

	$data['partner_id'] = makeSafe($_REQUEST['partner_id']);
		if($data['partner_id'] == empty_lookup_value){ $data['partner_id'] = ''; }
	$data['referer'] = makeSafe($_REQUEST['referer']);
		if($data['referer'] == empty_lookup_value){ $data['referer'] = ''; }
	$data['address_id'] = makeSafe($_REQUEST['address_id']);
		if($data['address_id'] == empty_lookup_value){ $data['address_id'] = ''; }
	$data['contact_date'] = intval($_REQUEST['contact_dateYear']) . '-' . intval($_REQUEST['contact_dateMonth']) . '-' . intval($_REQUEST['contact_dateDay']);
	$data['contact_date'] = parseMySQLDate($data['contact_date'], '<%%creationDate%%>1');
	$data['purchase_date'] = intval($_REQUEST['purchase_dateYear']) . '-' . intval($_REQUEST['purchase_dateMonth']) . '-' . intval($_REQUEST['purchase_dateDay']);
	$data['purchase_date'] = parseMySQLDate($data['purchase_date'], '1');
	$data['detachment'] = makeSafe($_REQUEST['detachment']);
		if($data['detachment'] == empty_lookup_value){ $data['detachment'] = ''; }
	$data['type'] = makeSafe($_REQUEST['type']);
		if($data['type'] == empty_lookup_value){ $data['type'] = ''; }
	$data['tenancy_type'] = makeSafe($_REQUEST['tenancy_type']);
		if($data['tenancy_type'] == empty_lookup_value){ $data['tenancy_type'] = ''; }
	$data['no_beds'] = makeSafe($_REQUEST['no_beds']);
		if($data['no_beds'] == empty_lookup_value){ $data['no_beds'] = ''; }
	$data['notes'] = makeSafe($_REQUEST['notes']);
		if($data['notes'] == empty_lookup_value){ $data['notes'] = ''; }

	// hook: property_before_insert
	if(function_exists('property_before_insert')){
		$args=array();
		if(!property_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `property` set       `partner_id`=' . (($data['partner_id'] !== '' && $data['partner_id'] !== NULL) ? "'{$data['partner_id']}'" : 'NULL') . ', `referer`=' . (($data['referer'] !== '' && $data['referer'] !== NULL) ? "'{$data['referer']}'" : 'NULL') . ', `address_id`=' . (($data['address_id'] !== '' && $data['address_id'] !== NULL) ? "'{$data['address_id']}'" : 'NULL') . ', `contact_date`=' . (($data['contact_date'] !== '' && $data['contact_date'] !== NULL) ? "'{$data['contact_date']}'" : 'NULL') . ', `purchase_date`=' . (($data['purchase_date'] !== '' && $data['purchase_date'] !== NULL) ? "'{$data['purchase_date']}'" : 'NULL') . ', `detachment`=' . (($data['detachment'] !== '' && $data['detachment'] !== NULL) ? "'{$data['detachment']}'" : 'NULL') . ', `type`=' . (($data['type'] !== '' && $data['type'] !== NULL) ? "'{$data['type']}'" : 'NULL') . ', `tenancy_type`=' . (($data['tenancy_type'] !== '' && $data['tenancy_type'] !== NULL) ? "'{$data['tenancy_type']}'" : 'NULL') . ', `no_beds`=' . (($data['no_beds'] !== '' && $data['no_beds'] !== NULL) ? "'{$data['no_beds']}'" : 'NULL') . ', `notes`=' . (($data['notes'] !== '' && $data['notes'] !== NULL) ? "'{$data['notes']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"property_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: property_after_insert
	if(function_exists('property_after_insert')){
		$res = sql("select * from `property` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!property_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	sql("insert ignore into membership_userrecords set tableName='property', pkValue='" . makeSafe($recID, false) . "', memberID='" . makeSafe(getLoggedMemberID(), false) . "', dateAdded='" . time() . "', dateUpdated='" . time() . "', groupID='" . getLoggedGroupID() . "'", $eo);

	return $recID;
}

function property_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('property');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='property' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='property' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: property_before_delete
	if(function_exists('property_before_delete')){
		$args=array();
		if(!property_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `property` where `id`='$selected_id'", $eo);

	// hook: property_after_delete
	if(function_exists('property_after_delete')){
		$args=array();
		property_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='property' and pkValue='$selected_id'", $eo);
}

function property_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('property');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='property' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='property' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['partner_id'] = makeSafe($_REQUEST['partner_id']);
		if($data['partner_id'] == empty_lookup_value){ $data['partner_id'] = ''; }
	$data['referer'] = makeSafe($_REQUEST['referer']);
		if($data['referer'] == empty_lookup_value){ $data['referer'] = ''; }
	$data['address_id'] = makeSafe($_REQUEST['address_id']);
		if($data['address_id'] == empty_lookup_value){ $data['address_id'] = ''; }
	$data['contact_date'] = intval($_REQUEST['contact_dateYear']) . '-' . intval($_REQUEST['contact_dateMonth']) . '-' . intval($_REQUEST['contact_dateDay']);
	$data['contact_date'] = parseMySQLDate($data['contact_date'], '<%%creationDate%%>1');
	$data['purchase_date'] = intval($_REQUEST['purchase_dateYear']) . '-' . intval($_REQUEST['purchase_dateMonth']) . '-' . intval($_REQUEST['purchase_dateDay']);
	$data['purchase_date'] = parseMySQLDate($data['purchase_date'], '1');
	$data['detachment'] = makeSafe($_REQUEST['detachment']);
		if($data['detachment'] == empty_lookup_value){ $data['detachment'] = ''; }
	$data['type'] = makeSafe($_REQUEST['type']);
		if($data['type'] == empty_lookup_value){ $data['type'] = ''; }
	$data['tenancy_type'] = makeSafe($_REQUEST['tenancy_type']);
		if($data['tenancy_type'] == empty_lookup_value){ $data['tenancy_type'] = ''; }
	$data['no_beds'] = makeSafe($_REQUEST['no_beds']);
		if($data['no_beds'] == empty_lookup_value){ $data['no_beds'] = ''; }
	$data['notes'] = makeSafe($_REQUEST['notes']);
		if($data['notes'] == empty_lookup_value){ $data['notes'] = ''; }
	$data['selectedID']=makeSafe($selected_id);

	// hook: property_before_update
	if(function_exists('property_before_update')){
		$args=array();
		if(!property_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `property` set       `partner_id`=' . (($data['partner_id'] !== '' && $data['partner_id'] !== NULL) ? "'{$data['partner_id']}'" : 'NULL') . ', `referer`=' . (($data['referer'] !== '' && $data['referer'] !== NULL) ? "'{$data['referer']}'" : 'NULL') . ', `address_id`=' . (($data['address_id'] !== '' && $data['address_id'] !== NULL) ? "'{$data['address_id']}'" : 'NULL') . ', `contact_date`=' . (($data['contact_date'] !== '' && $data['contact_date'] !== NULL) ? "'{$data['contact_date']}'" : 'NULL') . ', `purchase_date`=' . (($data['purchase_date'] !== '' && $data['purchase_date'] !== NULL) ? "'{$data['purchase_date']}'" : 'NULL') . ', `detachment`=' . (($data['detachment'] !== '' && $data['detachment'] !== NULL) ? "'{$data['detachment']}'" : 'NULL') . ', `type`=' . (($data['type'] !== '' && $data['type'] !== NULL) ? "'{$data['type']}'" : 'NULL') . ', `tenancy_type`=' . (($data['tenancy_type'] !== '' && $data['tenancy_type'] !== NULL) ? "'{$data['tenancy_type']}'" : 'NULL') . ', `no_beds`=' . (($data['no_beds'] !== '' && $data['no_beds'] !== NULL) ? "'{$data['no_beds']}'" : 'NULL') . ', `notes`=' . (($data['notes'] !== '' && $data['notes'] !== NULL) ? "'{$data['notes']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="property_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: property_after_update
	if(function_exists('property_after_update')){
		$res = sql("SELECT * FROM `property` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!property_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='property' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function property_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('property');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_partner_id = thisOr(undo_magic_quotes($_REQUEST['filterer_partner_id']), '');
	$filterer_referer = thisOr(undo_magic_quotes($_REQUEST['filterer_referer']), '');
	$filterer_address_id = thisOr(undo_magic_quotes($_REQUEST['filterer_address_id']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: partner_id
	$combo_partner_id = new DataCombo;
	// combobox: referer
	$combo_referer = new DataCombo;
	// combobox: address_id
	$combo_address_id = new DataCombo;
	// combobox: contact_date
	$combo_contact_date = new DateCombo;
	$combo_contact_date->DateFormat = "dmy";
	$combo_contact_date->MinYear = 1900;
	$combo_contact_date->MaxYear = 2100;
	$combo_contact_date->DefaultDate = parseMySQLDate('<%%creationDate%%>1', '<%%creationDate%%>1');
	$combo_contact_date->MonthNames = $Translation['month names'];
	$combo_contact_date->NamePrefix = 'contact_date';
	// combobox: purchase_date
	$combo_purchase_date = new DateCombo;
	$combo_purchase_date->DateFormat = "dmy";
	$combo_purchase_date->MinYear = 1900;
	$combo_purchase_date->MaxYear = 2100;
	$combo_purchase_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_purchase_date->MonthNames = $Translation['month names'];
	$combo_purchase_date->NamePrefix = 'purchase_date';
	// combobox: detachment
	$combo_detachment = new Combo;
	$combo_detachment->ListType = 2;
	$combo_detachment->MultipleSeparator = ', ';
	$combo_detachment->ListBoxHeight = 10;
	$combo_detachment->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/property.detachment.csv')){
		$detachment_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/property.detachment.csv')));
		$combo_detachment->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($detachment_data)));
		$combo_detachment->ListData = $combo_detachment->ListItem;
	}else{
		$combo_detachment->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Detached;;Semi-detached;;Link-detached;;Terraced;;N/A")));
		$combo_detachment->ListData = $combo_detachment->ListItem;
	}
	$combo_detachment->SelectName = 'detachment';
	// combobox: type
	$combo_type = new Combo;
	$combo_type->ListType = 2;
	$combo_type->MultipleSeparator = ', ';
	$combo_type->ListBoxHeight = 10;
	$combo_type->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/property.type.csv')){
		$type_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/property.type.csv')));
		$combo_type->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($type_data)));
		$combo_type->ListData = $combo_type->ListItem;
	}else{
		$combo_type->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("House;;Flat")));
		$combo_type->ListData = $combo_type->ListItem;
	}
	$combo_type->SelectName = 'type';
	// combobox: tenancy_type
	$combo_tenancy_type = new Combo;
	$combo_tenancy_type->ListType = 2;
	$combo_tenancy_type->MultipleSeparator = ', ';
	$combo_tenancy_type->ListBoxHeight = 10;
	$combo_tenancy_type->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/property.tenancy_type.csv')){
		$tenancy_type_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/property.tenancy_type.csv')));
		$combo_tenancy_type->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($tenancy_type_data)));
		$combo_tenancy_type->ListData = $combo_tenancy_type->ListItem;
	}else{
		$combo_tenancy_type->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Single-let;;HMO;;Serviced")));
		$combo_tenancy_type->ListData = $combo_tenancy_type->ListItem;
	}
	$combo_tenancy_type->SelectName = 'tenancy_type';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='property' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='property' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `property` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'property_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_partner_id->SelectedData = $row['partner_id'];
		$combo_referer->SelectedData = $row['referer'];
		$combo_address_id->SelectedData = $row['address_id'];
		$combo_contact_date->DefaultDate = $row['contact_date'];
		$combo_purchase_date->DefaultDate = $row['purchase_date'];
		$combo_detachment->SelectedData = $row['detachment'];
		$combo_type->SelectedData = $row['type'];
		$combo_tenancy_type->SelectedData = $row['tenancy_type'];
	}else{
		$combo_partner_id->SelectedData = $filterer_partner_id;
		$combo_referer->SelectedData = $filterer_referer;
		$combo_address_id->SelectedData = $filterer_address_id;
		$combo_detachment->SelectedText = ( $_REQUEST['FilterField'][1]=='7' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_type->SelectedText = ( $_REQUEST['FilterField'][1]=='8' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_tenancy_type->SelectedText = ( $_REQUEST['FilterField'][1]=='9' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
	}
	$combo_partner_id->HTML = '<span id="partner_id-container' . $rnd1 . '"></span><input type="hidden" name="partner_id" id="partner_id' . $rnd1 . '" value="' . html_attr($combo_partner_id->SelectedData) . '">';
	$combo_partner_id->MatchText = '<span id="partner_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="partner_id" id="partner_id' . $rnd1 . '" value="' . html_attr($combo_partner_id->SelectedData) . '">';
	$combo_referer->HTML = '<span id="referer-container' . $rnd1 . '"></span><input type="hidden" name="referer" id="referer' . $rnd1 . '" value="' . html_attr($combo_referer->SelectedData) . '">';
	$combo_referer->MatchText = '<span id="referer-container-readonly' . $rnd1 . '"></span><input type="hidden" name="referer" id="referer' . $rnd1 . '" value="' . html_attr($combo_referer->SelectedData) . '">';
	$combo_address_id->HTML = '<span id="address_id-container' . $rnd1 . '"></span><input type="hidden" name="address_id" id="address_id' . $rnd1 . '" value="' . html_attr($combo_address_id->SelectedData) . '">';
	$combo_address_id->MatchText = '<span id="address_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="address_id" id="address_id' . $rnd1 . '" value="' . html_attr($combo_address_id->SelectedData) . '">';
	$combo_detachment->Render();
	$combo_type->Render();
	$combo_tenancy_type->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_partner_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['partner_id'] : $filterer_partner_id); ?>"};
		AppGini.current_referer__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['referer'] : $filterer_referer); ?>"};
		AppGini.current_address_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['address_id'] : $filterer_address_id); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(partner_id_reload__RAND__) == 'function') partner_id_reload__RAND__();
				if(typeof(referer_reload__RAND__) == 'function') referer_reload__RAND__();
				if(typeof(address_id_reload__RAND__) == 'function') address_id_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function partner_id_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#partner_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_partner_id__RAND__.value, t: 'property', f: 'partner_id' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="partner_id"]').val(resp.results[0].id);
							$j('[id=partner_id-container-readonly__RAND__]').html('<span id="partner_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }


							if(typeof(partner_id_update_autofills__RAND__) == 'function') partner_id_update_autofills__RAND__();
						}
					});
				},
				width: ($j('fieldset .col-xs-11').width() - select2_max_width_decrement()) + 'px',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'property', f: 'partner_id' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_partner_id__RAND__.value = e.added.id;
				AppGini.current_partner_id__RAND__.text = e.added.text;
				$j('[name="partner_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }


				if(typeof(partner_id_update_autofills__RAND__) == 'function') partner_id_update_autofills__RAND__();
			});

			if(!$j("#partner_id-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_partner_id__RAND__.value, t: 'property', f: 'partner_id' },
					success: function(resp){
						$j('[name="partner_id"]').val(resp.results[0].id);
						$j('[id=partner_id-container-readonly__RAND__]').html('<span id="partner_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }

						if(typeof(partner_id_update_autofills__RAND__) == 'function') partner_id_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_partner_id__RAND__.value, t: 'property', f: 'partner_id' },
				success: function(resp){
					$j('[id=partner_id-container__RAND__], [id=partner_id-container-readonly__RAND__]').html('<span id="partner_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }

					if(typeof(partner_id_update_autofills__RAND__) == 'function') partner_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function referer_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#referer-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_referer__RAND__.value, t: 'property', f: 'referer' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="referer"]').val(resp.results[0].id);
							$j('[id=referer-container-readonly__RAND__]').html('<span id="referer-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }


							if(typeof(referer_update_autofills__RAND__) == 'function') referer_update_autofills__RAND__();
						}
					});
				},
				width: ($j('fieldset .col-xs-11').width() - select2_max_width_decrement()) + 'px',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'property', f: 'referer' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_referer__RAND__.value = e.added.id;
				AppGini.current_referer__RAND__.text = e.added.text;
				$j('[name="referer"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }


				if(typeof(referer_update_autofills__RAND__) == 'function') referer_update_autofills__RAND__();
			});

			if(!$j("#referer-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_referer__RAND__.value, t: 'property', f: 'referer' },
					success: function(resp){
						$j('[name="referer"]').val(resp.results[0].id);
						$j('[id=referer-container-readonly__RAND__]').html('<span id="referer-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }

						if(typeof(referer_update_autofills__RAND__) == 'function') referer_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_referer__RAND__.value, t: 'property', f: 'referer' },
				success: function(resp){
					$j('[id=referer-container__RAND__], [id=referer-container-readonly__RAND__]').html('<span id="referer-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }

					if(typeof(referer_update_autofills__RAND__) == 'function') referer_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function address_id_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#address_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_address_id__RAND__.value, t: 'property', f: 'address_id' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="address_id"]').val(resp.results[0].id);
							$j('[id=address_id-container-readonly__RAND__]').html('<span id="address_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=address_view_parent]').hide(); }else{ $j('.btn[id=address_view_parent]').show(); }


							if(typeof(address_id_update_autofills__RAND__) == 'function') address_id_update_autofills__RAND__();
						}
					});
				},
				width: ($j('fieldset .col-xs-11').width() - select2_max_width_decrement()) + 'px',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'property', f: 'address_id' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_address_id__RAND__.value = e.added.id;
				AppGini.current_address_id__RAND__.text = e.added.text;
				$j('[name="address_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=address_view_parent]').hide(); }else{ $j('.btn[id=address_view_parent]').show(); }


				if(typeof(address_id_update_autofills__RAND__) == 'function') address_id_update_autofills__RAND__();
			});

			if(!$j("#address_id-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_address_id__RAND__.value, t: 'property', f: 'address_id' },
					success: function(resp){
						$j('[name="address_id"]').val(resp.results[0].id);
						$j('[id=address_id-container-readonly__RAND__]').html('<span id="address_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=address_view_parent]').hide(); }else{ $j('.btn[id=address_view_parent]').show(); }

						if(typeof(address_id_update_autofills__RAND__) == 'function') address_id_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_address_id__RAND__.value, t: 'property', f: 'address_id' },
				success: function(resp){
					$j('[id=address_id-container__RAND__], [id=address_id-container-readonly__RAND__]').html('<span id="address_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=address_view_parent]').hide(); }else{ $j('.btn[id=address_view_parent]').show(); }

					if(typeof(address_id_update_autofills__RAND__) == 'function') address_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/property_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/property_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Property details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return property_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return property_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'window.parent.jQuery(\'.modal\').modal(\'hide\'); return false;';
	}else{
		$backAction = '$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode=str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return property_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#partner_id').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#partner_id_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#referer').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#referer_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#address_id').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#address_id_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#contact_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#contact_dateDay, #contact_dateMonth, #contact_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#purchase_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#purchase_dateDay, #purchase_dateMonth, #purchase_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('input[name=detachment]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=detachment]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=type]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=type]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=tenancy_type]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=tenancy_type]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#no_beds').replaceWith('<div class=\"form-control-static\" id=\"no_beds\">' + (jQuery('#no_beds').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode=str_replace('<%%COMBO(partner_id)%%>', $combo_partner_id->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(partner_id)%%>', $combo_partner_id->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(partner_id)%%>', urlencode($combo_partner_id->MatchText), $templateCode);
	$templateCode=str_replace('<%%COMBO(referer)%%>', $combo_referer->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(referer)%%>', $combo_referer->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(referer)%%>', urlencode($combo_referer->MatchText), $templateCode);
	$templateCode=str_replace('<%%COMBO(address_id)%%>', $combo_address_id->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(address_id)%%>', $combo_address_id->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(address_id)%%>', urlencode($combo_address_id->MatchText), $templateCode);
	$templateCode=str_replace('<%%COMBO(contact_date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_contact_date->GetHTML(true) . '</div>' : $combo_contact_date->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(contact_date)%%>', $combo_contact_date->GetHTML(true), $templateCode);
	$templateCode=str_replace('<%%COMBO(purchase_date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_purchase_date->GetHTML(true) . '</div>' : $combo_purchase_date->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(purchase_date)%%>', $combo_purchase_date->GetHTML(true), $templateCode);
	$templateCode=str_replace('<%%COMBO(detachment)%%>', $combo_detachment->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(detachment)%%>', $combo_detachment->SelectedData, $templateCode);
	$templateCode=str_replace('<%%COMBO(type)%%>', $combo_type->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(type)%%>', $combo_type->SelectedData, $templateCode);
	$templateCode=str_replace('<%%COMBO(tenancy_type)%%>', $combo_tenancy_type->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(tenancy_type)%%>', $combo_tenancy_type->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'partner_id' => array('partner', 'Client'), 'referer' => array('partner', 'Referer'), 'address_id' => array('address', 'Address_id'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode=str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(partner_id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(referer)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(address_id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(contact_date)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(purchase_date)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(detachment)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(type)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(tenancy_type)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(no_beds)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(notes)%%>', '', $templateCode);

	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(partner_id)%%>', html_attr($row['partner_id']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(partner_id)%%>', urlencode($urow['partner_id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(referer)%%>', html_attr($row['referer']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(referer)%%>', urlencode($urow['referer']), $templateCode);
		$templateCode=str_replace('<%%VALUE(address_id)%%>', html_attr($row['address_id']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(address_id)%%>', urlencode($urow['address_id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(contact_date)%%>', @date('d/m/Y', @strtotime(html_attr($row['contact_date']))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(contact_date)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['contact_date'])))), $templateCode);
		$templateCode=str_replace('<%%VALUE(purchase_date)%%>', @date('d/m/Y', @strtotime(html_attr($row['purchase_date']))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(purchase_date)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['purchase_date'])))), $templateCode);
		$templateCode=str_replace('<%%VALUE(detachment)%%>', html_attr($row['detachment']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(detachment)%%>', urlencode($urow['detachment']), $templateCode);
		$templateCode=str_replace('<%%VALUE(type)%%>', html_attr($row['type']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(type)%%>', urlencode($urow['type']), $templateCode);
		$templateCode=str_replace('<%%VALUE(tenancy_type)%%>', html_attr($row['tenancy_type']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(tenancy_type)%%>', urlencode($urow['tenancy_type']), $templateCode);
		$templateCode=str_replace('<%%VALUE(no_beds)%%>', html_attr($row['no_beds']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(no_beds)%%>', urlencode($urow['no_beds']), $templateCode);
		if($AllowUpdate || $AllowInsert){
			$templateCode = str_replace('<%%HTMLAREA(notes)%%>', '<textarea name="notes" id="notes" rows="5">' . html_attr($row['notes']) . '</textarea>', $templateCode);
		}else{
			$templateCode = str_replace('<%%HTMLAREA(notes)%%>', '<div id="notes" class="form-control-static">' . $row['notes'] . '</div>', $templateCode);
		}
		$templateCode=str_replace('<%%VALUE(notes)%%>', nl2br($row['notes']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(notes)%%>', urlencode($urow['notes']), $templateCode);
	}else{
		$templateCode=str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(partner_id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(partner_id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(referer)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(referer)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(address_id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(address_id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(contact_date)%%>', '<%%creationDate%%>1', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(contact_date)%%>', urlencode('<%%creationDate%%>1'), $templateCode);
		$templateCode=str_replace('<%%VALUE(purchase_date)%%>', '1', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(purchase_date)%%>', urlencode('1'), $templateCode);
		$templateCode=str_replace('<%%VALUE(detachment)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(detachment)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(type)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(type)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(tenancy_type)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(tenancy_type)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(no_beds)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(no_beds)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%HTMLAREA(notes)%%>', '<textarea name="notes" id="notes" rows="5"></textarea>', $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode=str_replace('<%%', '<!-- ', $templateCode);
	$templateCode=str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('property');
	if($selected_id){
		$jdata = get_joined_record('property', $selected_id);
		$rdata = $row;
	}
	$cache_data = array(
		'rdata' => array_map('nl2br', array_map('addslashes', $rdata)),
		'jdata' => array_map('nl2br', array_map('addslashes', $jdata)),
	);
	$templateCode .= loadView('property-ajax-cache', $cache_data);

	// hook: property_dv
	if(function_exists('property_dv')){
		$args=array();
		property_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>