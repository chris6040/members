<?php

// Data functions (insert, update, delete, form) for table loan

// This script and data application were generated by AppGini 5.62
// Download AppGini for free from https://bigprof.com/appgini/download/

function loan_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('loan');
	if(!$arrPerm[1]){
		return false;
	}

	$data['loan_type'] = makeSafe($_REQUEST['loan_type']);
		if($data['loan_type'] == empty_lookup_value){ $data['loan_type'] = ''; }
	$data['property_id'] = makeSafe($_REQUEST['property_id']);
		if($data['property_id'] == empty_lookup_value){ $data['property_id'] = ''; }
	$data['broker_id'] = makeSafe($_REQUEST['broker_id']);
		if($data['broker_id'] == empty_lookup_value){ $data['broker_id'] = ''; }
	$data['date'] = intval($_REQUEST['dateYear']) . '-' . intval($_REQUEST['dateMonth']) . '-' . intval($_REQUEST['dateDay']);
	$data['date'] = parseMySQLDate($data['date'], '1');
	$data['amount'] = makeSafe($_REQUEST['amount']);
		if($data['amount'] == empty_lookup_value){ $data['amount'] = ''; }
	$data['costs'] = makeSafe($_REQUEST['costs']);
		if($data['costs'] == empty_lookup_value){ $data['costs'] = ''; }
	$data['apr'] = makeSafe($_REQUEST['apr']);
		if($data['apr'] == empty_lookup_value){ $data['apr'] = ''; }
	$data['outstanding'] = makeSafe($_REQUEST['outstanding']);
		if($data['outstanding'] == empty_lookup_value){ $data['outstanding'] = ''; }
	$data['lender_id'] = makeSafe($_REQUEST['lender_id']);
		if($data['lender_id'] == empty_lookup_value){ $data['lender_id'] = ''; }
	$data['lender_ref'] = makeSafe($_REQUEST['lender_ref']);
		if($data['lender_ref'] == empty_lookup_value){ $data['lender_ref'] = ''; }

	// hook: loan_before_insert
	if(function_exists('loan_before_insert')){
		$args=array();
		if(!loan_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `loan` set       `loan_type`=' . (($data['loan_type'] !== '' && $data['loan_type'] !== NULL) ? "'{$data['loan_type']}'" : 'NULL') . ', `property_id`=' . (($data['property_id'] !== '' && $data['property_id'] !== NULL) ? "'{$data['property_id']}'" : 'NULL') . ', `broker_id`=' . (($data['broker_id'] !== '' && $data['broker_id'] !== NULL) ? "'{$data['broker_id']}'" : 'NULL') . ', `date`=' . (($data['date'] !== '' && $data['date'] !== NULL) ? "'{$data['date']}'" : 'NULL') . ', `amount`=' . (($data['amount'] !== '' && $data['amount'] !== NULL) ? "'{$data['amount']}'" : 'NULL') . ', `costs`=' . (($data['costs'] !== '' && $data['costs'] !== NULL) ? "'{$data['costs']}'" : 'NULL') . ', `apr`=' . (($data['apr'] !== '' && $data['apr'] !== NULL) ? "'{$data['apr']}'" : 'NULL') . ', `outstanding`=' . (($data['outstanding'] !== '' && $data['outstanding'] !== NULL) ? "'{$data['outstanding']}'" : 'NULL') . ', `lender_id`=' . (($data['lender_id'] !== '' && $data['lender_id'] !== NULL) ? "'{$data['lender_id']}'" : 'NULL') . ', `lender_ref`=' . (($data['lender_ref'] !== '' && $data['lender_ref'] !== NULL) ? "'{$data['lender_ref']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"loan_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: loan_after_insert
	if(function_exists('loan_after_insert')){
		$res = sql("select * from `loan` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!loan_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	sql("insert ignore into membership_userrecords set tableName='loan', pkValue='" . makeSafe($recID, false) . "', memberID='" . makeSafe(getLoggedMemberID(), false) . "', dateAdded='" . time() . "', dateUpdated='" . time() . "', groupID='" . getLoggedGroupID() . "'", $eo);

	return $recID;
}

function loan_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('loan');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='loan' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='loan' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: loan_before_delete
	if(function_exists('loan_before_delete')){
		$args=array();
		if(!loan_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `loan` where `id`='$selected_id'", $eo);

	// hook: loan_after_delete
	if(function_exists('loan_after_delete')){
		$args=array();
		loan_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='loan' and pkValue='$selected_id'", $eo);
}

function loan_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('loan');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='loan' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='loan' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['loan_type'] = makeSafe($_REQUEST['loan_type']);
		if($data['loan_type'] == empty_lookup_value){ $data['loan_type'] = ''; }
	$data['property_id'] = makeSafe($_REQUEST['property_id']);
		if($data['property_id'] == empty_lookup_value){ $data['property_id'] = ''; }
	$data['broker_id'] = makeSafe($_REQUEST['broker_id']);
		if($data['broker_id'] == empty_lookup_value){ $data['broker_id'] = ''; }
	$data['date'] = intval($_REQUEST['dateYear']) . '-' . intval($_REQUEST['dateMonth']) . '-' . intval($_REQUEST['dateDay']);
	$data['date'] = parseMySQLDate($data['date'], '1');
	$data['amount'] = makeSafe($_REQUEST['amount']);
		if($data['amount'] == empty_lookup_value){ $data['amount'] = ''; }
	$data['costs'] = makeSafe($_REQUEST['costs']);
		if($data['costs'] == empty_lookup_value){ $data['costs'] = ''; }
	$data['apr'] = makeSafe($_REQUEST['apr']);
		if($data['apr'] == empty_lookup_value){ $data['apr'] = ''; }
	$data['outstanding'] = makeSafe($_REQUEST['outstanding']);
		if($data['outstanding'] == empty_lookup_value){ $data['outstanding'] = ''; }
	$data['lender_id'] = makeSafe($_REQUEST['lender_id']);
		if($data['lender_id'] == empty_lookup_value){ $data['lender_id'] = ''; }
	$data['lender_ref'] = makeSafe($_REQUEST['lender_ref']);
		if($data['lender_ref'] == empty_lookup_value){ $data['lender_ref'] = ''; }
	$data['selectedID']=makeSafe($selected_id);

	// hook: loan_before_update
	if(function_exists('loan_before_update')){
		$args=array();
		if(!loan_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `loan` set       `loan_type`=' . (($data['loan_type'] !== '' && $data['loan_type'] !== NULL) ? "'{$data['loan_type']}'" : 'NULL') . ', `property_id`=' . (($data['property_id'] !== '' && $data['property_id'] !== NULL) ? "'{$data['property_id']}'" : 'NULL') . ', `broker_id`=' . (($data['broker_id'] !== '' && $data['broker_id'] !== NULL) ? "'{$data['broker_id']}'" : 'NULL') . ', `date`=' . (($data['date'] !== '' && $data['date'] !== NULL) ? "'{$data['date']}'" : 'NULL') . ', `amount`=' . (($data['amount'] !== '' && $data['amount'] !== NULL) ? "'{$data['amount']}'" : 'NULL') . ', `costs`=' . (($data['costs'] !== '' && $data['costs'] !== NULL) ? "'{$data['costs']}'" : 'NULL') . ', `apr`=' . (($data['apr'] !== '' && $data['apr'] !== NULL) ? "'{$data['apr']}'" : 'NULL') . ', `outstanding`=' . (($data['outstanding'] !== '' && $data['outstanding'] !== NULL) ? "'{$data['outstanding']}'" : 'NULL') . ', `lender_id`=' . (($data['lender_id'] !== '' && $data['lender_id'] !== NULL) ? "'{$data['lender_id']}'" : 'NULL') . ', `lender_ref`=' . (($data['lender_ref'] !== '' && $data['lender_ref'] !== NULL) ? "'{$data['lender_ref']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="loan_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: loan_after_update
	if(function_exists('loan_after_update')){
		$res = sql("SELECT * FROM `loan` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!loan_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='loan' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function loan_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('loan');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_loan_type = thisOr(undo_magic_quotes($_REQUEST['filterer_loan_type']), '');
	$filterer_property_id = thisOr(undo_magic_quotes($_REQUEST['filterer_property_id']), '');
	$filterer_broker_id = thisOr(undo_magic_quotes($_REQUEST['filterer_broker_id']), '');
	$filterer_lender_id = thisOr(undo_magic_quotes($_REQUEST['filterer_lender_id']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: loan_type
	$combo_loan_type = new DataCombo;
	// combobox: property_id
	$combo_property_id = new DataCombo;
	// combobox: broker_id
	$combo_broker_id = new DataCombo;
	// combobox: date
	$combo_date = new DateCombo;
	$combo_date->DateFormat = "dmy";
	$combo_date->MinYear = 1900;
	$combo_date->MaxYear = 2100;
	$combo_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_date->MonthNames = $Translation['month names'];
	$combo_date->NamePrefix = 'date';
	// combobox: lender_id
	$combo_lender_id = new DataCombo;

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='loan' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='loan' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `loan` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'loan_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_loan_type->SelectedData = $row['loan_type'];
		$combo_property_id->SelectedData = $row['property_id'];
		$combo_broker_id->SelectedData = $row['broker_id'];
		$combo_date->DefaultDate = $row['date'];
		$combo_lender_id->SelectedData = $row['lender_id'];
	}else{
		$combo_loan_type->SelectedData = $filterer_loan_type;
		$combo_property_id->SelectedData = $filterer_property_id;
		$combo_broker_id->SelectedData = $filterer_broker_id;
		$combo_lender_id->SelectedData = $filterer_lender_id;
	}
	$combo_loan_type->HTML = '<span id="loan_type-container' . $rnd1 . '"></span><input type="hidden" name="loan_type" id="loan_type' . $rnd1 . '" value="' . html_attr($combo_loan_type->SelectedData) . '">';
	$combo_loan_type->MatchText = '<span id="loan_type-container-readonly' . $rnd1 . '"></span><input type="hidden" name="loan_type" id="loan_type' . $rnd1 . '" value="' . html_attr($combo_loan_type->SelectedData) . '">';
	$combo_property_id->HTML = '<span id="property_id-container' . $rnd1 . '"></span><input type="hidden" name="property_id" id="property_id' . $rnd1 . '" value="' . html_attr($combo_property_id->SelectedData) . '">';
	$combo_property_id->MatchText = '<span id="property_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="property_id" id="property_id' . $rnd1 . '" value="' . html_attr($combo_property_id->SelectedData) . '">';
	$combo_broker_id->HTML = '<span id="broker_id-container' . $rnd1 . '"></span><input type="hidden" name="broker_id" id="broker_id' . $rnd1 . '" value="' . html_attr($combo_broker_id->SelectedData) . '">';
	$combo_broker_id->MatchText = '<span id="broker_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="broker_id" id="broker_id' . $rnd1 . '" value="' . html_attr($combo_broker_id->SelectedData) . '">';
	$combo_lender_id->HTML = '<span id="lender_id-container' . $rnd1 . '"></span><input type="hidden" name="lender_id" id="lender_id' . $rnd1 . '" value="' . html_attr($combo_lender_id->SelectedData) . '">';
	$combo_lender_id->MatchText = '<span id="lender_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="lender_id" id="lender_id' . $rnd1 . '" value="' . html_attr($combo_lender_id->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_loan_type__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['loan_type'] : $filterer_loan_type); ?>"};
		AppGini.current_property_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['property_id'] : $filterer_property_id); ?>"};
		AppGini.current_broker_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['broker_id'] : $filterer_broker_id); ?>"};
		AppGini.current_lender_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['lender_id'] : $filterer_lender_id); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(loan_type_reload__RAND__) == 'function') loan_type_reload__RAND__();
				if(typeof(property_id_reload__RAND__) == 'function') property_id_reload__RAND__();
				if(typeof(broker_id_reload__RAND__) == 'function') broker_id_reload__RAND__();
				if(typeof(lender_id_reload__RAND__) == 'function') lender_id_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function loan_type_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#loan_type-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_loan_type__RAND__.value, t: 'loan', f: 'loan_type' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="loan_type"]').val(resp.results[0].id);
							$j('[id=loan_type-container-readonly__RAND__]').html('<span id="loan_type-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=loan_type_view_parent]').hide(); }else{ $j('.btn[id=loan_type_view_parent]').show(); }


							if(typeof(loan_type_update_autofills__RAND__) == 'function') loan_type_update_autofills__RAND__();
						}
					});
				},
				width: ($j('fieldset .col-xs-11').width() - select2_max_width_decrement()) + 'px',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'loan', f: 'loan_type' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_loan_type__RAND__.value = e.added.id;
				AppGini.current_loan_type__RAND__.text = e.added.text;
				$j('[name="loan_type"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=loan_type_view_parent]').hide(); }else{ $j('.btn[id=loan_type_view_parent]').show(); }


				if(typeof(loan_type_update_autofills__RAND__) == 'function') loan_type_update_autofills__RAND__();
			});

			if(!$j("#loan_type-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_loan_type__RAND__.value, t: 'loan', f: 'loan_type' },
					success: function(resp){
						$j('[name="loan_type"]').val(resp.results[0].id);
						$j('[id=loan_type-container-readonly__RAND__]').html('<span id="loan_type-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=loan_type_view_parent]').hide(); }else{ $j('.btn[id=loan_type_view_parent]').show(); }

						if(typeof(loan_type_update_autofills__RAND__) == 'function') loan_type_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_loan_type__RAND__.value, t: 'loan', f: 'loan_type' },
				success: function(resp){
					$j('[id=loan_type-container__RAND__], [id=loan_type-container-readonly__RAND__]').html('<span id="loan_type-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=loan_type_view_parent]').hide(); }else{ $j('.btn[id=loan_type_view_parent]').show(); }

					if(typeof(loan_type_update_autofills__RAND__) == 'function') loan_type_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function property_id_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#property_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_property_id__RAND__.value, t: 'loan', f: 'property_id' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="property_id"]').val(resp.results[0].id);
							$j('[id=property_id-container-readonly__RAND__]').html('<span id="property_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=address_view_parent]').hide(); }else{ $j('.btn[id=address_view_parent]').show(); }


							if(typeof(property_id_update_autofills__RAND__) == 'function') property_id_update_autofills__RAND__();
						}
					});
				},
				width: ($j('fieldset .col-xs-11').width() - select2_max_width_decrement()) + 'px',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'loan', f: 'property_id' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_property_id__RAND__.value = e.added.id;
				AppGini.current_property_id__RAND__.text = e.added.text;
				$j('[name="property_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=address_view_parent]').hide(); }else{ $j('.btn[id=address_view_parent]').show(); }


				if(typeof(property_id_update_autofills__RAND__) == 'function') property_id_update_autofills__RAND__();
			});

			if(!$j("#property_id-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_property_id__RAND__.value, t: 'loan', f: 'property_id' },
					success: function(resp){
						$j('[name="property_id"]').val(resp.results[0].id);
						$j('[id=property_id-container-readonly__RAND__]').html('<span id="property_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=address_view_parent]').hide(); }else{ $j('.btn[id=address_view_parent]').show(); }

						if(typeof(property_id_update_autofills__RAND__) == 'function') property_id_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_property_id__RAND__.value, t: 'loan', f: 'property_id' },
				success: function(resp){
					$j('[id=property_id-container__RAND__], [id=property_id-container-readonly__RAND__]').html('<span id="property_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=address_view_parent]').hide(); }else{ $j('.btn[id=address_view_parent]').show(); }

					if(typeof(property_id_update_autofills__RAND__) == 'function') property_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function broker_id_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#broker_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_broker_id__RAND__.value, t: 'loan', f: 'broker_id' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="broker_id"]').val(resp.results[0].id);
							$j('[id=broker_id-container-readonly__RAND__]').html('<span id="broker_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }


							if(typeof(broker_id_update_autofills__RAND__) == 'function') broker_id_update_autofills__RAND__();
						}
					});
				},
				width: ($j('fieldset .col-xs-11').width() - select2_max_width_decrement()) + 'px',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'loan', f: 'broker_id' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_broker_id__RAND__.value = e.added.id;
				AppGini.current_broker_id__RAND__.text = e.added.text;
				$j('[name="broker_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }


				if(typeof(broker_id_update_autofills__RAND__) == 'function') broker_id_update_autofills__RAND__();
			});

			if(!$j("#broker_id-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_broker_id__RAND__.value, t: 'loan', f: 'broker_id' },
					success: function(resp){
						$j('[name="broker_id"]').val(resp.results[0].id);
						$j('[id=broker_id-container-readonly__RAND__]').html('<span id="broker_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }

						if(typeof(broker_id_update_autofills__RAND__) == 'function') broker_id_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_broker_id__RAND__.value, t: 'loan', f: 'broker_id' },
				success: function(resp){
					$j('[id=broker_id-container__RAND__], [id=broker_id-container-readonly__RAND__]').html('<span id="broker_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }

					if(typeof(broker_id_update_autofills__RAND__) == 'function') broker_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function lender_id_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#lender_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_lender_id__RAND__.value, t: 'loan', f: 'lender_id' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="lender_id"]').val(resp.results[0].id);
							$j('[id=lender_id-container-readonly__RAND__]').html('<span id="lender_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }


							if(typeof(lender_id_update_autofills__RAND__) == 'function') lender_id_update_autofills__RAND__();
						}
					});
				},
				width: ($j('fieldset .col-xs-11').width() - select2_max_width_decrement()) + 'px',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'loan', f: 'lender_id' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_lender_id__RAND__.value = e.added.id;
				AppGini.current_lender_id__RAND__.text = e.added.text;
				$j('[name="lender_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }


				if(typeof(lender_id_update_autofills__RAND__) == 'function') lender_id_update_autofills__RAND__();
			});

			if(!$j("#lender_id-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_lender_id__RAND__.value, t: 'loan', f: 'lender_id' },
					success: function(resp){
						$j('[name="lender_id"]').val(resp.results[0].id);
						$j('[id=lender_id-container-readonly__RAND__]').html('<span id="lender_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }

						if(typeof(lender_id_update_autofills__RAND__) == 'function') lender_id_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_lender_id__RAND__.value, t: 'loan', f: 'lender_id' },
				success: function(resp){
					$j('[id=lender_id-container__RAND__], [id=lender_id-container-readonly__RAND__]').html('<span id="lender_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=partner_view_parent]').hide(); }else{ $j('.btn[id=partner_view_parent]').show(); }

					if(typeof(lender_id_update_autofills__RAND__) == 'function') lender_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/loan_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/loan_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Loan details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return loan_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return loan_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'window.parent.jQuery(\'.modal\').modal(\'hide\'); return false;';
	}else{
		$backAction = '$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode=str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return loan_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#loan_type').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#loan_type_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#property_id').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#property_id_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#broker_id').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#broker_id_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#dateDay, #dateMonth, #dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#amount').replaceWith('<div class=\"form-control-static\" id=\"amount\">' + (jQuery('#amount').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#costs').replaceWith('<div class=\"form-control-static\" id=\"costs\">' + (jQuery('#costs').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#apr').replaceWith('<div class=\"form-control-static\" id=\"apr\">' + (jQuery('#apr').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#outstanding').replaceWith('<div class=\"form-control-static\" id=\"outstanding\">' + (jQuery('#outstanding').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#lender_id').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#lender_id_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#lender_ref').replaceWith('<div class=\"form-control-static\" id=\"lender_ref\">' + (jQuery('#lender_ref').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode=str_replace('<%%COMBO(loan_type)%%>', $combo_loan_type->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(loan_type)%%>', $combo_loan_type->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(loan_type)%%>', urlencode($combo_loan_type->MatchText), $templateCode);
	$templateCode=str_replace('<%%COMBO(property_id)%%>', $combo_property_id->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(property_id)%%>', $combo_property_id->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(property_id)%%>', urlencode($combo_property_id->MatchText), $templateCode);
	$templateCode=str_replace('<%%COMBO(broker_id)%%>', $combo_broker_id->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(broker_id)%%>', $combo_broker_id->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(broker_id)%%>', urlencode($combo_broker_id->MatchText), $templateCode);
	$templateCode=str_replace('<%%COMBO(date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_date->GetHTML(true) . '</div>' : $combo_date->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(date)%%>', $combo_date->GetHTML(true), $templateCode);
	$templateCode=str_replace('<%%COMBO(lender_id)%%>', $combo_lender_id->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(lender_id)%%>', $combo_lender_id->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(lender_id)%%>', urlencode($combo_lender_id->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'loan_type' => array('loan_type', 'Loan type'), 'property_id' => array('address', 'Property id'), 'broker_id' => array('partner', 'Broker id'), 'lender_id' => array('partner', 'Lender id'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode=str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(loan_type)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(property_id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(broker_id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(date)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(amount)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(costs)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(apr)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(outstanding)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(lender_id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(lender_ref)%%>', '', $templateCode);

	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(loan_type)%%>', html_attr($row['loan_type']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(loan_type)%%>', urlencode($urow['loan_type']), $templateCode);
		$templateCode=str_replace('<%%VALUE(property_id)%%>', html_attr($row['property_id']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(property_id)%%>', urlencode($urow['property_id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(broker_id)%%>', html_attr($row['broker_id']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(broker_id)%%>', urlencode($urow['broker_id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(date)%%>', @date('d/m/Y', @strtotime(html_attr($row['date']))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(date)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['date'])))), $templateCode);
		$templateCode=str_replace('<%%VALUE(amount)%%>', html_attr($row['amount']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(amount)%%>', urlencode($urow['amount']), $templateCode);
		$templateCode=str_replace('<%%VALUE(costs)%%>', html_attr($row['costs']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(costs)%%>', urlencode($urow['costs']), $templateCode);
		$templateCode=str_replace('<%%VALUE(apr)%%>', html_attr($row['apr']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(apr)%%>', urlencode($urow['apr']), $templateCode);
		$templateCode=str_replace('<%%VALUE(outstanding)%%>', html_attr($row['outstanding']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(outstanding)%%>', urlencode($urow['outstanding']), $templateCode);
		$templateCode=str_replace('<%%VALUE(lender_id)%%>', html_attr($row['lender_id']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(lender_id)%%>', urlencode($urow['lender_id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(lender_ref)%%>', html_attr($row['lender_ref']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(lender_ref)%%>', urlencode($urow['lender_ref']), $templateCode);
	}else{
		$templateCode=str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(loan_type)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(loan_type)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(property_id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(property_id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(broker_id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(broker_id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(date)%%>', '1', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(date)%%>', urlencode('1'), $templateCode);
		$templateCode=str_replace('<%%VALUE(amount)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(amount)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(costs)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(costs)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(apr)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(apr)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(outstanding)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(outstanding)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(lender_id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(lender_id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(lender_ref)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(lender_ref)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode=str_replace('<%%', '<!-- ', $templateCode);
	$templateCode=str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('loan');
	if($selected_id){
		$jdata = get_joined_record('loan', $selected_id);
		$rdata = $row;
	}
	$cache_data = array(
		'rdata' => array_map('nl2br', array_map('addslashes', $rdata)),
		'jdata' => array_map('nl2br', array_map('addslashes', $jdata)),
	);
	$templateCode .= loadView('loan-ajax-cache', $cache_data);

	// hook: loan_dv
	if(function_exists('loan_dv')){
		$args=array();
		loan_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>