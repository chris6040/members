<?php

// Data functions (insert, update, delete, form) for table leads

// This script and data application were generated by AppGini 5.62
// Download AppGini for free from https://bigprof.com/appgini/download/

function leads_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('leads');
	if(!$arrPerm[1]){
		return false;
	}

	$data['date_entered'] = parseCode('<%%creationDate%%>', true);
	$data['referer'] = parseCode('<%%creatorUsername%%>', true);
	$data['lead_name'] = makeSafe($_REQUEST['lead_name']);
		if($data['lead_name'] == empty_lookup_value){ $data['lead_name'] = ''; }
	$data['contact'] = makeSafe($_REQUEST['contact']);
		if($data['contact'] == empty_lookup_value){ $data['contact'] = ''; }
	$data['prop_area'] = makeSafe($_REQUEST['prop_area']);
		if($data['prop_area'] == empty_lookup_value){ $data['prop_area'] = ''; }
	$data['estimated_value'] = makeSafe($_REQUEST['estimated_value']);
		if($data['estimated_value'] == empty_lookup_value){ $data['estimated_value'] = ''; }
	$data['tenanted'] = makeSafe($_REQUEST['tenanted']);
		if($data['tenanted'] == empty_lookup_value){ $data['tenanted'] = ''; }
	$data['rental_income'] = makeSafe($_REQUEST['rental_income']);
		if($data['rental_income'] == empty_lookup_value){ $data['rental_income'] = ''; }
	$data['notes'] = makeSafe($_REQUEST['notes']);
		if($data['notes'] == empty_lookup_value){ $data['notes'] = ''; }
	$data['date_contacted'] = intval($_REQUEST['date_contactedYear']) . '-' . intval($_REQUEST['date_contactedMonth']) . '-' . intval($_REQUEST['date_contactedDay']);
	$data['date_contacted'] = parseMySQLDate($data['date_contacted'], '');

	// hook: leads_before_insert
	if(function_exists('leads_before_insert')){
		$args=array();
		if(!leads_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `leads` set       `date_entered`=' . "'{$data['date_entered']}'" . ', `referer`=' . "'{$data['referer']}'" . ', `lead_name`=' . (($data['lead_name'] !== '' && $data['lead_name'] !== NULL) ? "'{$data['lead_name']}'" : 'NULL') . ', `contact`=' . (($data['contact'] !== '' && $data['contact'] !== NULL) ? "'{$data['contact']}'" : 'NULL') . ', `prop_area`=' . (($data['prop_area'] !== '' && $data['prop_area'] !== NULL) ? "'{$data['prop_area']}'" : 'NULL') . ', `estimated_value`=' . (($data['estimated_value'] !== '' && $data['estimated_value'] !== NULL) ? "'{$data['estimated_value']}'" : 'NULL') . ', `tenanted`=' . (($data['tenanted'] !== '' && $data['tenanted'] !== NULL) ? "'{$data['tenanted']}'" : 'NULL') . ', `rental_income`=' . (($data['rental_income'] !== '' && $data['rental_income'] !== NULL) ? "'{$data['rental_income']}'" : 'NULL') . ', `notes`=' . (($data['notes'] !== '' && $data['notes'] !== NULL) ? "'{$data['notes']}'" : 'NULL') . ', `date_contacted`=' . (($data['date_contacted'] !== '' && $data['date_contacted'] !== NULL) ? "'{$data['date_contacted']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"leads_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: leads_after_insert
	if(function_exists('leads_after_insert')){
		$res = sql("select * from `leads` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!leads_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	sql("insert ignore into membership_userrecords set tableName='leads', pkValue='" . makeSafe($recID, false) . "', memberID='" . makeSafe(getLoggedMemberID(), false) . "', dateAdded='" . time() . "', dateUpdated='" . time() . "', groupID='" . getLoggedGroupID() . "'", $eo);

	return $recID;
}

function leads_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('leads');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='leads' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='leads' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: leads_before_delete
	if(function_exists('leads_before_delete')){
		$args=array();
		if(!leads_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `leads` where `id`='$selected_id'", $eo);

	// hook: leads_after_delete
	if(function_exists('leads_after_delete')){
		$args=array();
		leads_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='leads' and pkValue='$selected_id'", $eo);
}

function leads_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('leads');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='leads' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='leads' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['lead_name'] = makeSafe($_REQUEST['lead_name']);
		if($data['lead_name'] == empty_lookup_value){ $data['lead_name'] = ''; }
	$data['contact'] = makeSafe($_REQUEST['contact']);
		if($data['contact'] == empty_lookup_value){ $data['contact'] = ''; }
	$data['prop_area'] = makeSafe($_REQUEST['prop_area']);
		if($data['prop_area'] == empty_lookup_value){ $data['prop_area'] = ''; }
	$data['estimated_value'] = makeSafe($_REQUEST['estimated_value']);
		if($data['estimated_value'] == empty_lookup_value){ $data['estimated_value'] = ''; }
	$data['tenanted'] = makeSafe($_REQUEST['tenanted']);
		if($data['tenanted'] == empty_lookup_value){ $data['tenanted'] = ''; }
	$data['rental_income'] = makeSafe($_REQUEST['rental_income']);
		if($data['rental_income'] == empty_lookup_value){ $data['rental_income'] = ''; }
	$data['notes'] = makeSafe($_REQUEST['notes']);
		if($data['notes'] == empty_lookup_value){ $data['notes'] = ''; }
	$data['date_contacted'] = intval($_REQUEST['date_contactedYear']) . '-' . intval($_REQUEST['date_contactedMonth']) . '-' . intval($_REQUEST['date_contactedDay']);
	$data['date_contacted'] = parseMySQLDate($data['date_contacted'], '');
	$data['selectedID']=makeSafe($selected_id);

	// hook: leads_before_update
	if(function_exists('leads_before_update')){
		$args=array();
		if(!leads_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `leads` set       `date_entered`=`date_entered`' . ', `lead_name`=' . (($data['lead_name'] !== '' && $data['lead_name'] !== NULL) ? "'{$data['lead_name']}'" : 'NULL') . ', `contact`=' . (($data['contact'] !== '' && $data['contact'] !== NULL) ? "'{$data['contact']}'" : 'NULL') . ', `prop_area`=' . (($data['prop_area'] !== '' && $data['prop_area'] !== NULL) ? "'{$data['prop_area']}'" : 'NULL') . ', `estimated_value`=' . (($data['estimated_value'] !== '' && $data['estimated_value'] !== NULL) ? "'{$data['estimated_value']}'" : 'NULL') . ', `tenanted`=' . (($data['tenanted'] !== '' && $data['tenanted'] !== NULL) ? "'{$data['tenanted']}'" : 'NULL') . ', `rental_income`=' . (($data['rental_income'] !== '' && $data['rental_income'] !== NULL) ? "'{$data['rental_income']}'" : 'NULL') . ', `notes`=' . (($data['notes'] !== '' && $data['notes'] !== NULL) ? "'{$data['notes']}'" : 'NULL') . ', `date_contacted`=' . (($data['date_contacted'] !== '' && $data['date_contacted'] !== NULL) ? "'{$data['date_contacted']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="leads_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: leads_after_update
	if(function_exists('leads_after_update')){
		$res = sql("SELECT * FROM `leads` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!leads_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='leads' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function leads_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('leads');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}


	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: tenanted
	$combo_tenanted = new Combo;
	$combo_tenanted->ListType = 0;
	$combo_tenanted->MultipleSeparator = ', ';
	$combo_tenanted->ListBoxHeight = 10;
	$combo_tenanted->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/leads.tenanted.csv')){
		$tenanted_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/leads.tenanted.csv')));
		$combo_tenanted->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($tenanted_data)));
		$combo_tenanted->ListData = $combo_tenanted->ListItem;
	}else{
		$combo_tenanted->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No")));
		$combo_tenanted->ListData = $combo_tenanted->ListItem;
	}
	$combo_tenanted->SelectName = 'tenanted';
	// combobox: date_contacted
	$combo_date_contacted = new DateCombo;
	$combo_date_contacted->DateFormat = "dmy";
	$combo_date_contacted->MinYear = 1900;
	$combo_date_contacted->MaxYear = 2100;
	$combo_date_contacted->DefaultDate = parseMySQLDate('', '');
	$combo_date_contacted->MonthNames = $Translation['month names'];
	$combo_date_contacted->NamePrefix = 'date_contacted';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='leads' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='leads' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `leads` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'leads_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_tenanted->SelectedData = $row['tenanted'];
		$combo_date_contacted->DefaultDate = $row['date_contacted'];
	}else{
		$combo_tenanted->SelectedText = ( $_REQUEST['FilterField'][1]=='8' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
	}
	$combo_tenanted->Render();

	ob_start();
	?>

	<script>
		// initial lookup values

		jQuery(function() {
			setTimeout(function(){
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	$templateCode = @file_get_contents('./templates/leads_templateDV.html');

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Lead details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return leads_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return leads_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'window.parent.jQuery(\'.modal\').modal(\'hide\'); return false;';
	}else{
		$backAction = '$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return leads_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#lead_name').replaceWith('<div class=\"form-control-static\" id=\"lead_name\">' + (jQuery('#lead_name').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#contact').replaceWith('<div class=\"form-control-static\" id=\"contact\">' + (jQuery('#contact').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#prop_area').replaceWith('<div class=\"form-control-static\" id=\"prop_area\">' + (jQuery('#prop_area').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#estimated_value').replaceWith('<div class=\"form-control-static\" id=\"estimated_value\">' + (jQuery('#estimated_value').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#tenanted').replaceWith('<div class=\"form-control-static\" id=\"tenanted\">' + (jQuery('#tenanted').val() || '') + '</div>'); jQuery('#tenanted-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#rental_income').replaceWith('<div class=\"form-control-static\" id=\"rental_income\">' + (jQuery('#rental_income').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#date_contacted').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_contactedDay, #date_contactedMonth, #date_contactedYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode=str_replace('<%%COMBO(tenanted)%%>', $combo_tenanted->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(tenanted)%%>', $combo_tenanted->SelectedData, $templateCode);
	$templateCode=str_replace('<%%COMBO(date_contacted)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_date_contacted->GetHTML(true) . '</div>' : $combo_date_contacted->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(date_contacted)%%>', $combo_date_contacted->GetHTML(true), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array();
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode=str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(date_entered)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(referer)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(lead_name)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(contact)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(prop_area)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(estimated_value)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(tenanted)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(rental_income)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(notes)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(est_commission)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(date_contacted)%%>', '', $templateCode);

	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(date_entered)%%>', html_attr($row['date_entered']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(date_entered)%%>', urlencode($urow['date_entered']), $templateCode);
		$templateCode=str_replace('<%%VALUE(referer)%%>', html_attr($row['referer']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(referer)%%>', urlencode($urow['referer']), $templateCode);
		$templateCode=str_replace('<%%VALUE(lead_name)%%>', html_attr($row['lead_name']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(lead_name)%%>', urlencode($urow['lead_name']), $templateCode);
		$templateCode=str_replace('<%%VALUE(contact)%%>', html_attr($row['contact']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(contact)%%>', urlencode($urow['contact']), $templateCode);
		$templateCode=str_replace('<%%VALUE(prop_area)%%>', html_attr($row['prop_area']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(prop_area)%%>', urlencode($urow['prop_area']), $templateCode);
		$templateCode=str_replace('<%%VALUE(estimated_value)%%>', html_attr($row['estimated_value']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(estimated_value)%%>', urlencode($urow['estimated_value']), $templateCode);
		$templateCode=str_replace('<%%VALUE(tenanted)%%>', html_attr($row['tenanted']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(tenanted)%%>', urlencode($urow['tenanted']), $templateCode);
		$templateCode=str_replace('<%%VALUE(rental_income)%%>', html_attr($row['rental_income']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(rental_income)%%>', urlencode($urow['rental_income']), $templateCode);
		if($AllowUpdate || $AllowInsert){
			$templateCode = str_replace('<%%HTMLAREA(notes)%%>', '<textarea name="notes" id="notes" rows="5">' . html_attr($row['notes']) . '</textarea>', $templateCode);
		}else{
			$templateCode = str_replace('<%%HTMLAREA(notes)%%>', '<div id="notes" class="form-control-static">' . $row['notes'] . '</div>', $templateCode);
		}
		$templateCode=str_replace('<%%VALUE(notes)%%>', nl2br($row['notes']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(notes)%%>', urlencode($urow['notes']), $templateCode);
		$templateCode=str_replace('<%%VALUE(est_commission)%%>', html_attr($row['est_commission']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(est_commission)%%>', urlencode($urow['est_commission']), $templateCode);
		$templateCode=str_replace('<%%VALUE(date_contacted)%%>', @date('d/m/Y', @strtotime(html_attr($row['date_contacted']))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(date_contacted)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['date_contacted'])))), $templateCode);
	}else{
		$templateCode=str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(date_entered)%%>', '<%%creationDate%%>', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(date_entered)%%>', urlencode('<%%creationDate%%>'), $templateCode);
		$templateCode=str_replace('<%%VALUE(referer)%%>', '<%%creatorUsername%%>', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(referer)%%>', urlencode('<%%creatorUsername%%>'), $templateCode);
		$templateCode=str_replace('<%%VALUE(lead_name)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(lead_name)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(contact)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(contact)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(prop_area)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(prop_area)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(estimated_value)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(estimated_value)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(tenanted)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(tenanted)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(rental_income)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(rental_income)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%HTMLAREA(notes)%%>', '<textarea name="notes" id="notes" rows="5"></textarea>', $templateCode);
		$templateCode=str_replace('<%%VALUE(est_commission)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(est_commission)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(date_contacted)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(date_contacted)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode=str_replace('<%%', '<!-- ', $templateCode);
	$templateCode=str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('leads');
	if($selected_id){
		$jdata = get_joined_record('leads', $selected_id);
		$rdata = $row;
	}
	$cache_data = array(
		'rdata' => array_map('nl2br', array_map('addslashes', $rdata)),
		'jdata' => array_map('nl2br', array_map('addslashes', $jdata)),
	);
	$templateCode .= loadView('leads-ajax-cache', $cache_data);

	// hook: leads_dv
	if(function_exists('leads_dv')){
		$args=array();
		leads_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>