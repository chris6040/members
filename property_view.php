<?php
// This script and data application were generated by AppGini 5.62
// Download AppGini for free from https://bigprof.com/appgini/download/

	$currDir=dirname(__FILE__);
	include("$currDir/defaultLang.php");
	include("$currDir/language.php");
	include("$currDir/lib.php");
	@include("$currDir/hooks/property.php");
	include("$currDir/property_dml.php");

	// mm: can the current member access this page?
	$perm=getTablePermissions('property');
	if(!$perm[0]){
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout("window.location=\'index.php?signOut=1\'", 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = "property";

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = array(   
		"`property`.`id`" => "id",
		"IF(    CHAR_LENGTH(`partner1`.`company_name`) || CHAR_LENGTH(`partner1`.`mailname`), CONCAT_WS('',   `partner1`.`company_name`, ' - ', `partner1`.`mailname`), '') /* Client */" => "partner_id",
		"IF(    CHAR_LENGTH(`partner2`.`company_name`) || CHAR_LENGTH(`partner2`.`mailname`), CONCAT_WS('',   `partner2`.`company_name`, ' - ', `partner2`.`mailname`), '') /* Referer */" => "referer",
		"IF(    CHAR_LENGTH(`address1`.`postcode1`) || CHAR_LENGTH(`address1`.`address1`), CONCAT_WS('',   `address1`.`postcode1`, ' - ', `address1`.`address1`), '') /* Address_id */" => "address_id",
		"if(`property`.`contact_date`,date_format(`property`.`contact_date`,'%d/%m/%Y'),'')" => "contact_date",
		"if(`property`.`purchase_date`,date_format(`property`.`purchase_date`,'%d/%m/%Y'),'')" => "purchase_date",
		"`property`.`detachment`" => "detachment",
		"`property`.`type`" => "type",
		"`property`.`tenancy_type`" => "tenancy_type",
		"`property`.`no_beds`" => "no_beds",
		"`property`.`notes`" => "notes"
	);
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = array(   
		1 => '`property`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => '`property`.`contact_date`',
		6 => '`property`.`purchase_date`',
		7 => 7,
		8 => 8,
		9 => 9,
		10 => '`property`.`no_beds`',
		11 => 11
	);

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = array(   
		"`property`.`id`" => "id",
		"IF(    CHAR_LENGTH(`partner1`.`company_name`) || CHAR_LENGTH(`partner1`.`mailname`), CONCAT_WS('',   `partner1`.`company_name`, ' - ', `partner1`.`mailname`), '') /* Client */" => "partner_id",
		"IF(    CHAR_LENGTH(`partner2`.`company_name`) || CHAR_LENGTH(`partner2`.`mailname`), CONCAT_WS('',   `partner2`.`company_name`, ' - ', `partner2`.`mailname`), '') /* Referer */" => "referer",
		"IF(    CHAR_LENGTH(`address1`.`postcode1`) || CHAR_LENGTH(`address1`.`address1`), CONCAT_WS('',   `address1`.`postcode1`, ' - ', `address1`.`address1`), '') /* Address_id */" => "address_id",
		"if(`property`.`contact_date`,date_format(`property`.`contact_date`,'%d/%m/%Y'),'')" => "contact_date",
		"if(`property`.`purchase_date`,date_format(`property`.`purchase_date`,'%d/%m/%Y'),'')" => "purchase_date",
		"`property`.`detachment`" => "detachment",
		"`property`.`type`" => "type",
		"`property`.`tenancy_type`" => "tenancy_type",
		"`property`.`no_beds`" => "no_beds",
		"`property`.`notes`" => "notes"
	);
	// Fields that can be filtered
	$x->QueryFieldsFilters = array(   
		"`property`.`id`" => "ID",
		"IF(    CHAR_LENGTH(`partner1`.`company_name`) || CHAR_LENGTH(`partner1`.`mailname`), CONCAT_WS('',   `partner1`.`company_name`, ' - ', `partner1`.`mailname`), '') /* Client */" => "Client",
		"IF(    CHAR_LENGTH(`partner2`.`company_name`) || CHAR_LENGTH(`partner2`.`mailname`), CONCAT_WS('',   `partner2`.`company_name`, ' - ', `partner2`.`mailname`), '') /* Referer */" => "Referer",
		"IF(    CHAR_LENGTH(`address1`.`postcode1`) || CHAR_LENGTH(`address1`.`address1`), CONCAT_WS('',   `address1`.`postcode1`, ' - ', `address1`.`address1`), '') /* Address_id */" => "Address_id",
		"`property`.`contact_date`" => "First contact",
		"`property`.`purchase_date`" => "Purchase date",
		"`property`.`detachment`" => "Detachment",
		"`property`.`type`" => "Type",
		"`property`.`tenancy_type`" => "Tenancy type",
		"`property`.`no_beds`" => "No beds",
		"`property`.`notes`" => "Notes"
	);

	// Fields that can be quick searched
	$x->QueryFieldsQS = array(   
		"`property`.`id`" => "id",
		"IF(    CHAR_LENGTH(`partner1`.`company_name`) || CHAR_LENGTH(`partner1`.`mailname`), CONCAT_WS('',   `partner1`.`company_name`, ' - ', `partner1`.`mailname`), '') /* Client */" => "partner_id",
		"IF(    CHAR_LENGTH(`partner2`.`company_name`) || CHAR_LENGTH(`partner2`.`mailname`), CONCAT_WS('',   `partner2`.`company_name`, ' - ', `partner2`.`mailname`), '') /* Referer */" => "referer",
		"IF(    CHAR_LENGTH(`address1`.`postcode1`) || CHAR_LENGTH(`address1`.`address1`), CONCAT_WS('',   `address1`.`postcode1`, ' - ', `address1`.`address1`), '') /* Address_id */" => "address_id",
		"if(`property`.`contact_date`,date_format(`property`.`contact_date`,'%d/%m/%Y'),'')" => "contact_date",
		"if(`property`.`purchase_date`,date_format(`property`.`purchase_date`,'%d/%m/%Y'),'')" => "purchase_date",
		"`property`.`detachment`" => "detachment",
		"`property`.`type`" => "type",
		"`property`.`tenancy_type`" => "tenancy_type",
		"`property`.`no_beds`" => "no_beds",
		"`property`.`notes`" => "notes"
	);

	// Lookup fields that can be used as filterers
	$x->filterers = array(  'partner_id' => 'Client', 'referer' => 'Referer', 'address_id' => 'Address_id');

	$x->QueryFrom = "`property` LEFT JOIN `partner` as partner1 ON `partner1`.`id`=`property`.`partner_id` LEFT JOIN `partner` as partner2 ON `partner2`.`id`=`property`.`referer` LEFT JOIN `address` as address1 ON `address1`.`id`=`property`.`address_id` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm[2]==0 ? 1 : 0);
	$x->AllowDelete = $perm[4];
	$x->AllowMassDelete = false;
	$x->AllowInsert = $perm[1];
	$x->AllowUpdate = $perm[3];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 0;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation["quick search"];
	$x->ScriptFileName = "property_view.php";
	$x->RedirectAfterInsert = "property_view.php?SelectedID=#ID#";
	$x->TableTitle = "Property";
	$x->TableIcon = "table.gif";
	$x->PrimaryKey = "`property`.`id`";

	$x->ColWidth   = array(  150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150);
	$x->ColCaption = array("ID", "Client", "Referer", "Address_id", "First contact", "Purchase date", "Detachment", "Type", "Tenancy type", "No beds", "Notes");
	$x->ColFieldName = array('id', 'partner_id', 'referer', 'address_id', 'contact_date', 'purchase_date', 'detachment', 'type', 'tenancy_type', 'no_beds', 'notes');
	$x->ColNumber  = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);

	// template paths below are based on the app main directory
	$x->Template = 'templates/property_templateTV.html';
	$x->SelectedTemplate = 'templates/property_templateTVS.html';
	$x->TemplateDV = 'templates/property_templateDV.html';
	$x->TemplateDVP = 'templates/property_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->ShowRecordSlots = 0;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HighlightColor = '#FFF0C2';

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, array('user', 'group'))){ $DisplayRecords = 'all'; }
	if($perm[2]==1 || ($perm[2]>1 && $DisplayRecords=='user' && !$_REQUEST['NoFilter_x'])){ // view owner only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `property`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='property' and lcase(membership_userrecords.memberID)='".getLoggedMemberID()."'";
	}elseif($perm[2]==2 || ($perm[2]>2 && $DisplayRecords=='group' && !$_REQUEST['NoFilter_x'])){ // view group only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `property`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='property' and membership_userrecords.groupID='".getLoggedGroupID()."'";
	}elseif($perm[2]==3){ // view all
		// no further action
	}elseif($perm[2]==0){ // view none
		$x->QueryFields = array("Not enough permissions" => "NEP");
		$x->QueryFrom = '`property`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: property_init
	$render=TRUE;
	if(function_exists('property_init')){
		$args=array();
		$render=property_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: property_header
	$headerCode='';
	if(function_exists('property_header')){
		$args=array();
		$headerCode=property_header($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$headerCode){
		include_once("$currDir/header.php"); 
	}else{
		ob_start(); include_once("$currDir/header.php"); $dHeader=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%HEADER%%>', $dHeader, $headerCode);
	}

	echo $x->HTML;
	// hook: property_footer
	$footerCode='';
	if(function_exists('property_footer')){
		$args=array();
		$footerCode=property_footer($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$footerCode){
		include_once("$currDir/footer.php"); 
	}else{
		ob_start(); include_once("$currDir/footer.php"); $dFooter=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%FOOTER%%>', $dFooter, $footerCode);
	}
?>